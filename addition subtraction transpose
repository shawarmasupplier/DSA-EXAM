#include <stdio.h>

#define MAX 10

void inputMatrix(int matrix[MAX][MAX], int rows, int cols) {
    printf("Enter elements (%d x %d):\n", rows, cols);
    for (int i = 0; i < rows; i++)
        for (int j = 0; j < cols; j++)
            scanf("%d", &matrix[i][j]);
}

void printMatrix(int matrix[MAX][MAX], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

void addMatrix(int a[MAX][MAX], int b[MAX][MAX], int result[MAX][MAX], int rows, int cols) {
    for (int i = 0; i < rows; i++)
        for (int j = 0; j < cols; j++)
            result[i][j] = a[i][j] + b[i][j];
}

void subtractMatrix(int a[MAX][MAX], int b[MAX][MAX], int result[MAX][MAX], int rows, int cols) {
    for (int i = 0; i < rows; i++)
        for (int j = 0; j < cols; j++)
            result[i][j] = a[i][j] - b[i][j];
}

void transposeMatrix(int matrix[MAX][MAX], int result[MAX][MAX], int rows, int cols) {
    for (int i = 0; i < rows; i++)
        for (int j = 0; j < cols; j++)
            result[j][i] = matrix[i][j];
}

int main() {
    int a[MAX][MAX], b[MAX][MAX], result[MAX][MAX];
    int rows, cols, choice;

    printf("Enter number of rows and columns (max %d): ", MAX);
    scanf("%d %d", &rows, &cols);

    printf("Enter elements for Matrix A:\n");
    inputMatrix(a, rows, cols);

    printf("Enter elements for Matrix B:\n");
    inputMatrix(b, rows, cols);

    do {
        printf("\n--- Menu ---\n");
        printf("1. Add Matrices\n");
        printf("2. Subtract Matrices\n");
        printf("3. Transpose Matrix A\n");
        printf("4. Transpose Matrix B\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch(choice) {
            case 1:
                addMatrix(a, b, result, rows, cols);
                printf("Result (A + B):\n");
                printMatrix(result, rows, cols);
                break;
            case 2:
                subtractMatrix(a, b, result, rows, cols);
                printf("Result (A - B):\n");
                printMatrix(result, rows, cols);
                break;
            case 3:
                transposeMatrix(a, result, rows, cols);
                printf("Transpose of Matrix A:\n");
                printMatrix(result, cols, rows);  // Transposed dimensions
                break;
            case 4:
                transposeMatrix(b, result, rows, cols);
                printf("Transpose of Matrix B:\n");
                printMatrix(result, cols, rows);
                break;
            case 5:
                printf("Exiting program.\n");
                break;
            default:
                printf("Invalid choice. Try again.\n");
        }

    } while(choice != 5);

    return 0;
}
